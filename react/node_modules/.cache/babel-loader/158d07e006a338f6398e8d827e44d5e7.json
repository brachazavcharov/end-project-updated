{"ast":null,"code":"var _jsxFileName = \"D:\\\\users\\\\user1\\\\Documents\\\\material-dashboard-react-main\\\\src\\\\views\\\\Icons\\\\Icons.js\",\n    _s = $RefreshSig$();\n\n//בדף זה נציג את האזור האישי של המשתמש בו יהיה הצ'ט עם המדריכה ודיאגרמת משקל\n//ומחשבון bmi\n\n/*eslint-disable*/\nimport React, { useEffect, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hidden from \"@material-ui/core/Hidden\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { connect } from \"react-redux\";\nimport { getAllCustomers } from \"../../actions/customer\";\nimport styles from \"assets/jss/material-dashboard-react/views/iconsStyle.js\";\nimport { cardHeader } from \"assets/jss/material-dashboard-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\n\nfunction Icons(props) {\n  _s();\n\n  let maxLostWeight = 0;\n  let [nameOfWinner, setNameOfWinner] = useState(\"\");\n\n  const winner = () => {\n    console.log(\"winner \");\n    console.log(props.arr);\n    props.arr ? props.arr.forEach(element => {\n      debugger;\n\n      if (parseFloat(element.customerWeights[element.customerWeights.length - 2].currentWeight) - parseFloat(element.customerWeights[element.customerWeights.length - 1].currentWeight) > maxLostWeight) {\n        maxLostWeight = parseFloat(element.customerWeights[element.customerWeights.length - 2].currentWeight) - parseFloat(element.customerWeights[element.customerWeights.length - 1].currentWeight);\n        let name = element.name + \" \" + element.lastName;\n        setNameOfWinner(name);\n        console.log(nameOfWinner);\n      }\n    }) : null;\n  };\n\n  const intreduceWinner = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: nameOfWinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  };\n\n  useEffect(() => {\n    props.getAllCustomers();\n  }, []);\n  useEffect(() => {\n    winner();\n  }, [props.arr]);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        plain: true,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          plain: true,\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.cardTitleWhite,\n            children: \"\\u05D4\\u05DE\\u05E8\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD \\u05D4\\u05E9\\u05D1\\u05D5\\u05E2\\u05D9\\u05D9\\u05DD \\u05E9\\u05DC\\u05E0\\u05D5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.cardCategoryWhite,\n            children: [\"herbalife  \\u05E8\\u05D3 \\u05D1\\u05DE\\u05E9\\u05E7\\u05DC \\u05D1\\u05D3\\u05E8\\u05DA \\u05E0\\u05DB\\u05D5\\u05E0\\u05D4 \\u05D5\\u05D1\\u05E8\\u05D9\\u05D0\\u05D4 \\u05D5\\u05D6\\u05DB\\u05D4 \\u05D1\\u05E4\\u05E8\\u05E1 \\u05DE\\u05EA\\u05E0\\u05EA \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \":\\u05D4\\u05D6\\u05D5\\u05DB\\u05D4 \\u05D4\\u05E9\\u05D1\\u05D5\\u05E2\\u05D9 \\u05E9\\u05DC\\u05E0\\u05D5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), intreduceWinner()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Icons, \"DKBAeOBNOHvZ/HIG+DLLnNoLCUQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Icons;\n\nconst mapStateToProps = state => {\n  return {\n    arr: state.customerReducer.customerArr\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllCustomers\n})(Icons);\n\nvar _c;\n\n$RefreshReg$(_c, \"Icons\");","map":{"version":3,"sources":["D:/users/user1/Documents/material-dashboard-react-main/src/views/Icons/Icons.js"],"names":["React","useEffect","useState","makeStyles","Hidden","GridItem","GridContainer","Card","CardHeader","CardBody","connect","getAllCustomers","styles","cardHeader","useStyles","Icons","props","maxLostWeight","nameOfWinner","setNameOfWinner","winner","console","log","arr","forEach","element","parseFloat","customerWeights","length","currentWeight","name","lastName","intreduceWinner","classes","cardTitleWhite","cardCategoryWhite","mapStateToProps","state","customerReducer","customerArr"],"mappings":"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","sourcesContent":["//בדף זה נציג את האזור האישי של המשתמש בו יהיה הצ'ט עם המדריכה ודיאגרמת משקל\n//ומחשבון bmi\n\n/*eslint-disable*/\nimport React, { useEffect, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { connect } from \"react-redux\";\nimport { getAllCustomers } from \"../../actions/customer\";\nimport styles from \"assets/jss/material-dashboard-react/views/iconsStyle.js\";\nimport { cardHeader } from \"assets/jss/material-dashboard-react\";\n\nconst useStyles = makeStyles(styles);\nfunction Icons(props) {\n  let maxLostWeight = 0;\n  let [nameOfWinner, setNameOfWinner] = useState(\"\");\n\n  const winner = () => {\n    console.log(\"winner \");\n    console.log(props.arr);\n\n    props.arr ? props.arr.forEach(element => {\n      debugger;\n      if (parseFloat(element.customerWeights[element.customerWeights.length - 2].currentWeight) -\n        parseFloat(element.customerWeights[element.customerWeights.length - 1].currentWeight) > maxLostWeight) {\n        maxLostWeight = parseFloat(element.customerWeights[element.customerWeights.length - 2].currentWeight) -\n          parseFloat(element.customerWeights[element.customerWeights.length - 1].currentWeight);\n          let name=element.name + \" \" + element.lastName;\n        setNameOfWinner (name) ;\n        console.log(nameOfWinner);\n      }\n    }\n    ) : null\n  }\n  const intreduceWinner = () => {\n    return <p>{nameOfWinner}</p>\n  }\n  useEffect(() => {\n    props.getAllCustomers();\n  }, [])\n  useEffect(() => {\n    winner();\n  }, [props.arr])\n  const classes = useStyles();\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12}>\n        <Card plain>\n          <CardHeader plain color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>המרתונים השבועיים שלנו</h4>\n            <p className={classes.cardCategoryWhite}>\n              herbalife  רד במשקל בדרך נכונה ובריאה וזכה בפרס מתנת {\" \"}\n              {/* <a\n                href=\"https://design.google.com/icons/?ref=creativetime\"\n                target=\"_blank\"\n              >\n                Google\n              </a> */}\n            </p>\n          </CardHeader>\n          <CardBody>\n            {/* <Hidden only={[\"sm\", \"xs\"]}>\n              <iframe\n                className={classes.iframe}\n                src=\"https://material.io/icons/\"\n                title=\"Icons iframe\"\n              >\n                <p>Your browser does not support iframes.</p>\n              </iframe>\n            </Hidden> */}\n            {/* <Hidden only={[\"lg\", \"md\"]}>\n              <GridItem xs={12} sm={12} md={6}>\n                <h5>\n                  The icons are visible on Desktop mode inside an iframe. Since\n                  the iframe is not working on Mobile and Tablets please visit\n                  the icons on their original page on Google. Check the\n                  <a\n                    href=\"https://design.google.com/icons/?ref=creativetime\"\n                    target=\"_blank\"\n                  >\n                    Material Icons\n                  </a>\n                </h5>\n              </GridItem>\n            </Hidden> */}\n\n            <div>\n              <h3>:הזוכה השבועי שלנו</h3>\n              {intreduceWinner()}\n\n            </div>\n          </CardBody>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  );\n}\nconst mapStateToProps = (state) => {\n\n  return { arr: state.customerReducer.customerArr };\n}\nexport default connect(mapStateToProps, { getAllCustomers })(Icons);"]},"metadata":{},"sourceType":"module"}